assume that there are all the necessary filts to the left of the megastack, that is
    filt[ctype=1<<k]
    filt[ctype=address] 
    filt[ctype=10000003] 
the [ and ] markers show the boundary of the pstn particles controlled by the address

      megastack
       ||
       vv
initially
    m3    f0 st f1 [ pt*       pt  ] in -- as many pstns as bits to control; last pstn is pstn(-2)
    m3 co f0 st f1 [ pt*       pt  ] in -- conv sprk to pscn
    ps co f0 st f1 [ pt*       pt  ] in -- conv pscn to sprk
    p4 ls f0 st f1 [ pt*       pt  ] in -- change p4 to p3
    p3 cr f0 st f1 [ pt*       pt  ] in -- delete most of the piston except the last particle
    p3 cr f0 st f1 [ ..*       ..  ] in -- spawn a bunch of stor but don't fill the last spot
    p3 co f0 st f1 [ st*       ..  ] in -- conv sprk to metl
    me co f0 st f1 [ st*       ..  ] in -- conv metl to sprk
    m4 ls f0 st f1 [ st*       ..  ] in -- change m4 to m3
    m3    f0 st f1 [ st*       ..  ] in
repeat as many times as there are bits to control
    m3 ld f0 st f1 [ st* st .. pt* ] in -- set f0 ctype to 1 << k
    m3 ar f0 st f1 [ st* st .. pt* ] in -- fire bray, either filling up the empty slot with a bray or not
    m3 co f0 st f1 [ st* st b? pt* ] in -- conv sprk to pscn
    ps co f0 st f1 [ st* st b? pt* ] in -- conv pscn to sprk
    p4 ld f0 st f1 [ st* st b? pt* ] in -- set f0 ctype to 10000003
    p4 ls f0 st f1 [ st* st b? pt* ] in -- change p4 to p3
    p3 cr f0 st f1 [ st* st b? pt* ] in -- delete next stor (skip this step in the last iteration, in which there is no such stor)
    p3 cr f0 st f1 [ st* .. b? pt* ] in -- fire pscn cray, so the slot either turns into pstn(1 << k) or goes back to empty
    p3 co f0 st f1 [ st* .. p? pt* ] in -- conv sprk to metl
    me co f0 st f1 [ st* .. p? pt* ] in -- conv metl to sprk
    m4 ls f0 st f1 [ st* .. p? pt* ] in -- change m4 to m3
    m3 cr f0 st f1 [ st* .. p? pt* ] in -- fire metl cray, so the slot is either pstn(0) or pstn(1 << k)
    m3    f0 st f1 [ st* .. pt pt* ] in

..: empty
f#: filt[tmp=#]
b?: potential bray
p?: potential pstn
co: conv
ls: lsns
ld: ldtc
dr: dray
cr: cray
ar: aray
st: stor
pt: pstn
ps: pscn
me: metl
p#: sprk[ctype=pscn,life=#]
m#: sprk[ctype=metl,life=#]
xx*: any number of xx's
