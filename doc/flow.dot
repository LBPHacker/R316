digraph {
	node[shape=record, height="0.4", width="0.4"]
	{ rank=same; flags_in; ram_addr_in; ram_data_in; instr_cache_in; state_in; execwrite_addr_in; pc_in; sync_in }
	{ rank=same; flags_out; ram_addr_out; ram_data_out; instr_cache_out; state_out; execwrite_addr_out; pc_out }
	{ rank=same; execwrite_addr_sel_0; flags_sel; ram_addr_sel; instr_cache_sel_0 }
	state_in [color="#F00"]
	state_out [color="#F00"]
	state_next [color="#F00"]
	instr_sel [color="#44F"]
	reg_dest_sel [color="#44F"]
	flags_in [color="#0BF"]
	flags_out [color="#0BF"]
	flags_sel [color="#0BF"]
	cond [color="#0BF"]
	reg_read [color="#F0F"]
	reg_write [color="#F0F"]
	sec_sel [color="#F0F"]
	sync_in [color="#0BF"]
	instr_cache_in [color="#F80"]
	instr_cache_out [color="#F80"]
	ram_data_in [color="#F80"]
	ram_data_out [color="#F80"]
	ram_addr_in [color="#F80"]
	ram_addr_out [color="#F80"]
	ram_addr_sel [color="#F80"]
	instr_cache_sel_0 [color="#F80"]
	ram [color="#F80"]
	alu [color="#8C0"]
	pc_incr [color="#0A4"]
	pc_in [color="#0A4"]
	pc_out [color="#0A4"]
	pc_sel [color="#0A4"]
	execwrite_addr_in [color="#880"]
	execwrite_addr_out [color="#880"]
	execwrite_addr_sel_0 [color="#880"]
	flags_in -> cond [label="flags", color="#0BF"]
	instr_sel -> cond [label="cond", color="#44F"]
	sync_in -> cond [label="sync", color="#0BF"]
	cond -> pc_sel [label="jump", color="#0BF"]
	pc_in -> pc_incr [label="pc", color="#0A4"]
	pc_in -> pc_sel [label="pc", color="#0A4"]
	pc_incr -> pc_sel [label="pc_incr", color="#0A4"]
	sec_sel -> pc_sel [label="pc_sec", color="#F0F"]
	state_in -> pc_sel [label="??????", color="#F00"]
	pc_sel -> pc_out [label="pc", color="#0A4"]
	execwrite_addr_sel_0 -> execwrite_addr_out [label="execwrite_addr", color="#880"]
	execwrite_addr_in -> execwrite_addr_sel_0 [label="execwrite_addr", color="#880"]
	alu -> execwrite_addr_sel_0 [label="ram_addr_delayed", color="#8C0"]
	ram_addr_in -> ram [label="addr", color="#F80"]
	ram_data_in -> ram [label="data", color="#F80"]
	instr_sel -> sec_sel [label="imm", color="#44F"]
	reg_read -> sec_sel [label="r3", color="#F0F"]
	instr_sel -> sec_sel [label="mode", color="#44F"]
	instr_sel -> alu [label="op", color="#44F"]
	sec_sel -> alu [label="sec", color="#F0F"]
	reg_read -> alu [label="pri", color="#F0F"]
	flags_in -> alu [label="flags", color="#0BF"]
	flags_in -> flags_sel [label="flags_old", color="#0BF"]
	alu -> flags_sel [label="flags_new", color="#8C0"]
	flags_sel -> flags_out [label="flags", color="#0BF"]
	instr_sel -> reg_read [label="i3", color="#44F"]
	instr_sel -> reg_read [label="i2", color="#44F"]
	instr_sel -> instr_cache_sel_0 [label="instr", color="#44F"]
	state_in -> instr_cache_sel_0 [label="??????", color="#F00"]
	instr_cache_sel_0 -> instr_cache_out [label="instr_cache", color="#F80"]
	alu -> ram_addr_sel [label="ram_addr", color="#8C0"]
	execwrite_addr_in -> ram_addr_sel [label="prevres", color="#880"]
	pc_sel -> ram_addr_sel [label="pc", color="#0A4"]
	state_in -> ram_addr_sel [label="is_read_first", color="#F00"]
	state_in -> ram_addr_sel [label="execwrite_addr_valid\n(in execwrite_addr_in)", color="#F00"]
	ram_addr_sel -> ram_addr_out [label="addr", color="#F80"]
	instr_cache_in -> instr_sel [label="instr_cache", color="#F80"]
	state_in -> instr_sel [label="instr_cache_valid\n(in instr_cache_in)", color="#F00"]
	ram -> instr_sel [label="instr", color="#F80"]
	alu -> reg_write [label="reg_value", color="#8C0"]
	pc_incr -> alu [label="pc_incr", color="#0A4"]
	reg_dest_sel -> reg_write [label="reg_dest", color="#44F"]
	state_in -> reg_dest_sel [label="is_write_first", color="#F00"]
	state_in -> execwrite_addr_sel_0 [label="is_write_first", color="#F00"]
	state_in -> execwrite_addr_sel_0 [label="is_write_second", color="#F00"]
	instr_sel -> reg_dest_sel [label="i1_instr", color="#44F"]
	state_in -> state_next [label="??????", color="#F00"]
	instr_sel -> state_next [label="instr", color="#44F"]
	state_next -> state_out [label="??????", color="#F00"]
	alu -> ram_data_out [label="ram_data", color="#8C0"]
	instr_sel -> flags_sel [label="wflags", color="#44F"]
}
